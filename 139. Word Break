https://leetcode.com/problems/word-break/description/

class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> set=new HashSet<>(wordDict);
        int maxlen=0;
        for(String str:wordDict)
        {
            maxlen=Math.max(maxlen,str.length());
        }
        int n=s.length();
        boolean[] dp=new boolean[n+1];
        dp[0]=true;
        for(int i=1;i<=n;i++)
        {
            int start=Math.max(0,i-maxlen);
            for(int j=start;j<i;j++)
            {
                if(!dp[j]) continue;
                if(set.contains(s.substring(j,i)))
                {
                    dp[i]=true;
                    break;
                }
            }
        }
        return dp[n];
        
    }
}

my logic :

class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> set=new HashSet<>();
        int n=s.length();
        for(String str:wordDict)
        {
            set.add(str);
        }
        int l=0;
        int var=-1;
        while(l<n)
        {
            for(int r=l;r<=n;r++)
            {
                String sub=s.substring(l,r);
                System.out.println(sub);
                if(set.contains(sub))
                {
                    var=r;
                    l=r;
                   
                }
            }
            if(var==n)
            {
                return true;
            }
            l++;
        }
        return false;
    }
}
